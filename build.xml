<project name="com.twu.biblioteca" default="runTest" basedir=".">

    <property name="project.name" value="TWU_Biblioteca-master"></property>
    <property name="package.name" value="com.twu.biblioteca"/>
    <property name="codecoverDir" value="/usr/local/share/java/codecover"/>
    <property name="sourceDir" value="src"/>
    <property name="instrumentedSourceDir" value="instrumented"/>
    <property name="mainClassName" value="BibliotecaApp.java"/>
    <taskdef name="codecover" classname="org.codecover.ant.CodecoverTask" classpath="lib/codecover-batch-1.0/lib/codecover-ant.jar" />

    <target name = "init">
        <mkdir dir="out" />
    </target>

    <target name="compile" depends="clean,init">
        <javac destdir="out">
            <src path="src:test"/>
            <classpath location = "lib/junit-4.12.jar"/>
            <classpath location = "lib/hamcrest-core-1.3.jar"/>
            <classpath location = "lib/mockito-all-1.9.5.jar"/>
        </javac>
    </target>

    <target name="runTest" depends="compile">
        <junit printsummary="true" haltonfailure="true" outputtoformatters="true">
            <classpath>
                <pathelement location="lib/junit-4.12.jar"/>
                <pathelement location="lib/hamcrest-core-1.3.jar"/>
                <pathelement location="lib/mockito-all-1.9.5.jar"/>
                <pathelement location="out"/>
            </classpath>

            <batchtest fork="yes" haltonfailure="true">
                <fileset dir="out" includes="**/*Test*.class"/>
            </batchtest>
            <formatter type="brief" usefile="false"/>
        </junit>
    </target>

    <target name="clean" description="clean previous output directory">
        <delete dir="out"/>
        <delete>
            <fileset dir="." includes="*.clf"/>
        </delete>
        <delete file="codecover.xml"/>
        <delete file="report.html"/>
        <delete dir="report.html-files"/>
    </target>

    <target name="buildJar" depends="compile">
        <jar destfile="lib/${project.name}.jar"
             basedir="out"
             excludes="**/*Test*.class">
            <manifest>
                <attribute name="Main-Class" value="${package.name}.BibliotecaApp"/>
            </manifest>
        </jar>
    </target>

    <target name="run" depends="buildJar">
        <java fork="true" failonerror="yes" classname="${package.name}.BibliotecaApp">
            <classpath>
                <path location="lib/${project.name}.jar"/>
            </classpath>
        </java>
    </target>

    <target name="instrument-sources" depends="clean">
        <codecover>
            <instrument containerId="c" language="java" destination="instrumented-out" charset="utf-8" copyUninstrumented="yes">
                <source dir="src">
                    <include name="**/*.java"/>
                </source>
            </instrument>
            <save containerId="c" filename="codecover.xml"/>
        </codecover>
    </target>

    <target name="compile-instrumented" depends="instrument-sources">
        <javac srcdir="instrumented-out" destdir="instrumented-out" encoding="utf-8" target="1.5" debug="true" classpath="lib/codecover-batch-1.0/lib/codecover-instrumentation-java.jar" includeAntRuntime="false"></javac>
    </target>

    <target name="run-instrumented" depends="compile-instrumented">
        <java classpath="instrumented-out:lib/codecover-batch-1.0/lib/codecover-instrumentation-java.jar" fork="true" failonerror="true" classname="com.twu.biblioteca.BibliotecaApp">
            <jvmarg value="-Dorg.codecover.coverage-log-file=test.clf"/>
        </java>
    </target>

    <target name="create-report" depends="run-instrumented">
        <codecover>
            <load containerId="c" filename="codecover.xml"/>
            <analyze containerId="c" coverageLog="test.clf" name="Test Session"/>
            <save containerId="c" filename="codecover.xml"/>
            <report containerId="c" destination="report.html" template="lib/codecover-batch-1.0/report-templates/HTML_Report_hierarchic.xml">
                <testCases>
                    <testSession pattern=".*">
                        <testCase pattern=".*"/>
                    </testSession>
                </testCases>
            </report>
        </codecover>
    </target>

</project>